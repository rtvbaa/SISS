{"version":3,"sources":["ProductTable.js","App.js","reportWebVitals.js","index.js"],"names":["ProductTable","props","className","id","items","map","itemData","productName","productPrice","htmlFor","type","size","defaultItems","App","useState","setItems","useEffect","fetch","then","res","json","data","onClick","console","log","payload","document","getElementById","value","method","headers","body","JSON","stringify","window","location","reload","sendPost","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"kMA0BeA,MA1Bf,SAAsBC,GACnB,OAAS,wBAAOC,UAAU,QAAjB,UACY,gCACA,+BACI,oCACA,8CACA,oDAGJ,uBAAOC,GAAG,OAAV,SACKF,EAAMG,MAAMC,KAAI,SAAAC,GAAQ,OAAK,+BAAI,6BAAKA,EAASH,KAAQ,6BAAKG,EAASC,cAAiB,6BAAKD,EAASE,uBAEzG,+BACI,oCACA,+BACI,uBAAOC,QAAQ,mBACf,uBAAON,GAAG,iBAAiBO,KAAK,OAAOC,KAAK,UAEhD,+BACI,uBAAOF,QAAQ,oBACf,uBAAON,GAAG,kBAAkBO,KAAK,SAASC,KAAK,iBChBzEC,EAAe,CAAC,CAACT,GAAI,IAAKI,YAAa,OAAQC,aAAc,KAgEpDK,MA9Df,WACI,IADW,EAUgBC,mBAASF,GAVzB,mBAUJR,EAVI,KAUGW,EAVH,KAmBX,OANAC,qBAAU,WAuBNC,MAAM,6BAA6BC,MAAK,SAACC,GAAS,OAAOA,EAAIC,UAtBnDF,MAAK,SAAAG,GACXN,EAASM,SAKb,qBAAKnB,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,qBAAKA,UAAU,YAAf,SACI,cAAC,EAAD,CAAcE,MAAOA,MAEzB,8BACI,wBAAQD,GAAG,aAAamB,QAzBpB,WAChBC,QAAQC,IAAI,QAsCpB,WACI,IAAIC,EAAU,CACVlB,YAAamB,SAASC,eAAe,kBAAkBC,MACvDpB,aAAckB,SAASC,eAAe,mBAAmBC,OAG7DX,MAAM,6BACF,CACIY,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUR,KAExBP,MAAK,SAAUC,GACZ,OAAOA,EAAIC,UAEdF,MAAK,WACFgB,OAAOC,SAASC,YAvDpBC,IAuBY,uCCpBLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASC,eAAe,SAM1BW,K","file":"static/js/main.145aed96.chunk.js","sourcesContent":["function ProductTable(props) {\r\n   return  (<table className=\"table\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Product name</th>\r\n                            <th>Product price</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody id=\"data\">\r\n                            {props.items.map(itemData => (<tr><td>{itemData.id}</td><td>{itemData.productName}</td><td>{itemData.productPrice}</td></tr>))} \r\n                        </tbody>\r\n                        <tr>\r\n                            <td>id</td>\r\n                            <td>\r\n                                <label htmlFor=\"NewProductName\"/>\r\n                                <input id=\"NewProductName\" type=\"text\" size=\"40\"/>\r\n                            </td>\r\n                            <td>\r\n                                <label htmlFor=\"NewProductPrice\"/>\r\n                                <input id=\"NewProductPrice\" type=\"number\" size=\"40\"/>\r\n                            </td>\r\n                        </tr>\r\n                    </table>)\r\n}\r\n\r\nexport default ProductTable;","import \"./App.css\";\r\nimport {useEffect, useState} from 'react';\r\nimport ProductTable from './ProductTable'\r\n\r\nconst defaultItems = [{id: '1', productName: 'name', productPrice: 23}];\r\n\r\nfunction App() {\r\n    const handleClick = () => {\r\n        console.log(\"POST\");\r\n        sendPost();\r\n    };\r\n\r\n\r\n    // const array = useState(defaultItems);\r\n    // const items = array[0];\r\n    // const setItems = array[1];\r\n    const [items, setItems] =  useState(defaultItems);\r\n\r\n            // hook\r\n    useEffect(()=>{\r\n        getData().then(data => {\r\n            setItems(data);\r\n        })\r\n    });\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <div className=\"container\">\r\n                    <ProductTable items={items}/>\r\n                </div>\r\n                <div>\r\n                    <button id=\"the-button\" onClick={handleClick}>\r\n                        Add a new product\r\n                    </button>\r\n                </div>\r\n            </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getData() {\r\n return fetch(\"http://localhost:8080/get\").then((res) => {return res.json();});\r\n}\r\n\r\n\r\nfunction sendPost() {\r\n    let payload = {\r\n        productName: document.getElementById('NewProductName').value,\r\n        productPrice: document.getElementById('NewProductPrice').value\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/post\",\r\n        {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(payload)\r\n        })\r\n        .then(function (res) {\r\n            return res.json();\r\n        })\r\n        .then(() => {\r\n            window.location.reload();\r\n        })\r\n}   \r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}